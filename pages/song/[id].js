import Head from 'next/head'
import { useContext, useState, useEffect } from "react";
import { GlobalContext } from "@utils/GlobalContext";
import Link from 'next/link';
import { createClient } from '@supabase/supabase-js';
import Skeletons from '@components/Skeletons';
import { useRouter } from 'next/router';
import { supabase } from '@libs/Supabase';
import { parseCookies } from 'nookies';

// export async function getServerSideProps(context) {
//   const id = context.params.id
//   const supabaseAdmin = createClient(process.env.SUPABASE_URL || '', process.env.SUPABASE_ANON_KEY || '');

//   // const { data } = await supabaseAdmin.from('song').select(`*, artist (*)`).match({ id: id });
//   const { data } = await supabaseAdmin
//     .from('song')
//     .select(`
//       id,
//       name,
//       youtubeId,
//       albumCoverUrl,
//       artistId,
//       artist (
//         id,
//         name,
//         genre,
//         coverUrl
//       )
//     `)
//     .match({ id: id });

//   return {
//     props: {
//       song: data[0]
//     }
//   };
// }

// export default function Song({ song }) {
export default function Song() {
  const { darkMode, setDarkMode } = useContext(GlobalContext);
  const [fetched, setFetched] = useState(false);
  const [song, setSong] = useState();
  const router = useRouter();
  const id = router.query.id;
  const cookies = parseCookies();
  const isLoggedIn = cookies.username ? true : false;

  async function getSong() {
    const { data } = await supabase.from('song').select(`*, artist (*)`).match({ id: id });
    if (data) {
      setSong(data[0])
      setFetched(true)
    }
  }

  useEffect(() => {
    if (!fetched || !song) {
      getSong();
    }
  }, [fetched, id])

  return (
    <div>
      <Head>
        <title>{song?.name || "Song"} - {song?.artist.name || "Artist"}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="dark:bg-neutral-900 min-h-screen p-8 md:p-12">
        <div className="max-w-lg mx-auto">

          <nav className="flex justify-between mb-8 gap-x-4">
            <Link href="/">
              <a className="text-blue-500 hover:text-blue-600 font-medium transition-all hover:cursor-pointer">Songs</a>
            </Link>
            <Link href="/artists">
              <a className="text-blue-500 hover:text-blue-600 font-medium transition-all hover:cursor-pointer">Artists</a>
            </Link>
            {isLoggedIn ?
              <Link href="/logout">
                <a className="bg-red-500 px-2.5 py-0.5 text-white rounded hover:bg-red-600 text-sm  font-medium transition-all hover:cursor-pointer">Logout</a>
              </Link>
              :
              <Link href="/login">
                <a className="bg-blue-500 px-2.5 py-0.5 text-white rounded hover:bg-blue-600 text-sm font-medium transition-all hover:cursor-pointer">Login</a>
              </Link>
            }
            <div onClick={() => setDarkMode(!darkMode)} className="transition-all cursor-pointer w-12 h-7 dark:bg-blue-500 bg-neutral-200 rounded-full relative">
              <div className="h-5 w-5 bg-white rounded-full absolute top-1 transition-all dark:left-6 left-1"></div>
            </div>
          </nav>

          {fetched ?
            <>
              <div>
                <h1 className="text-neutral-700 dark:text-gray-100 text-xl font-bold">{song.name}</h1>
                <Link href={`/artist/${song.artist.id}`}>
                  <a className="block mt-1 font-medium text-sm sm:text-base text-neutral-700 dark:text-gray-300 hover:!text-blue-600 transition-all cursor-pointer">{song.artist.name}</a>
                </Link>
              </div>

              <div className="mt-4">
                <div className="h-60 sm:h-72 lg:h-80 mb-4">
                  <iframe
                    width="100%"
                    height="100%"
                    src={`https://www.youtube.com/embed/${song.youtubeId}`}
                    frameBorder="0"
                    allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
                    allowFullScreen
                  />
                </div>
              </div>
            </>
            :
            <>
              <Skeletons className="!h-8 !w-40" />
              <Skeletons className="!h-6 !w-16 !mb-4" />
              <Skeletons className="!h-52" />
            </>
          }
          {/* <div>
            <h1 className="text-neutral-700 dark:text-gray-100 text-xl font-bold">{song.name}</h1>
            <Link href={`/artist/${song.artist.id}`}>
              <a className="block mt-1 font-medium text-sm sm:text-base text-neutral-700 dark:text-gray-300 hover:!text-blue-600 transition-all cursor-pointer">{song.artist.name}</a>
            </Link>
          </div>

          <div className="mt-4">
            <div className="h-60 sm:h-72 lg:h-80 mb-4">
              <iframe
                width="100%"
                height="100%"
                src={`https://www.youtube.com/embed/${song.youtubeId}`}
                frameBorder="0"
                allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
                allowFullScreen
              />
            </div>
            <Link href="/">
              <span className="text-blue-500 hover:text-blue-600 transition-all cursor-pointer text-sm font-medium">Back to Song List</span>
            </Link>
          </div> */}
        </div>
      </main>
    </div>
  )
}
